plugins {
    id 'java'
    id("com.github.johnrengelman.shadow") version "6.1.0"
}

group 'com.dumbdogdiner'
version '2.2.0'

repositories {
    mavenCentral()
    maven {
        name("headdatabase-api")
        url("https://mvn.intellectualsites.com/content/repositories/thirdparty/")
    }
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/public/' }
    // Temporary because their cert expired, lmao
    flatDir {
        dirs 'libstmp'
    }
}

dependencies {
    compile project(":common")
    testCompile project(":common").sourceSets.test.output

    compile project(":webapi")
    testCompile project(":webapi").sourceSets.test.output

    compileOnly("me.arcaniax:HeadDatabase-API:1.1.0")

    implementation("org.jsoup:jsoup:1.13.1")
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.0"))

    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")
    implementation 'commons-validator:commons-validator:1.7'

    implementation("com.google.guava:guava:30.1.1-jre")
    implementation 'com.google.code.gson:gson:2.8.6'

    testImplementation 'org.apache.commons:commons-csv:1.8'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation("com.squareup.okhttp3:mockwebserver")
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

}

test {
    useJUnitPlatform()
}

clean {
    delete 'src/main/resources/generated'
}

task downloadTextures(type: Download){
    sourceUrl = "https://dumbdogdiner.github.io/mc-heads-resource/textures.json"
    target = file("src/main/resources/generated/textures.json")
}

shadowJar {
    archiveClassifier.set("")
}

jar.finalizedBy(shadowJar)
processResources.dependsOn tasks.withType(Download)

class Download extends DefaultTask {
    @Input
    String sourceUrl

    @OutputFile
    File target

    @TaskAction
    void download() {
        ant.get(src: sourceUrl, dest: target, verbose: true)
    }
}